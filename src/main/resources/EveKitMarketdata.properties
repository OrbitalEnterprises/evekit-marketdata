##########################################################################################################
# EveKit Marketdata properties file.
#
# The majority of these settings come from pom.xml but you can override here directly if you need to.
# By convention, only non-sensitive properties are set in pom.xml   Sensitive properties are set in your
# local Maven settings.xml file and substituted at build time.
#
##########################################################################################################

##########################################################################################################
# Database Configuration
##########################################################################################################

# Persistence unit for properties
enterprises.orbital.evekit.marketdata.persistence_unit = ${enterprises.orbital.evekit.marketdata.persistence_unit}

##########################################################################################################
# CREST Configuration
##########################################################################################################

# Base URL for CREST
enterprises.orbital.evekit.marketdata.crest.root = ${enterprises.orbital.evekit.marketdata.crest.root}

# CREST Agent.  Setting this to a sane value will allow CCP to contact you if there are problems, instead of just blocking your IP
enterprises.orbital.evekit.marketdata.crest.agent = ${enterprises.orbital.evekit.marketdata.crest.agent}

# CREST connection timeout
enterprises.orbital.evekit.marketdata.crest.connectTimeout = ${enterprises.orbital.evekit.marketdata.crest.connectTimeout}

##########################################################################################################
# Downloader Configuration
##########################################################################################################

# Root of "history" output directory
enterprises.orbital.evekit.marketdata.historyDir = ${enterprises.orbital.evekit.marketdata.historyDir}

# Root of "regions" output director
enterprises.orbital.evekit.marketdata.regionDir = ${enterprises.orbital.evekit.marketdata.regionDir}

# Number of threads to use for retrieving market history
enterprises.orbital.evekit.marketdata.historyThreads = ${enterprises.orbital.evekit.marketdata.historyThreads}

# Number of threads to use for retrieving region order data
enterprises.orbital.evekit.marketdata.regionThreads = ${enterprises.orbital.evekit.marketdata.regionThreads}

# Interval (milliseconds) between instrument and region updates against CREST reference data
enterprises.orbital.evekit.marketdata.refUpdateInt = ${enterprises.orbital.evekit.marketdata.refUpdateInt}

# How frequently (milliseconds) we check for stuck market history downloads
enterprises.orbital.evekit.marketdata.instStuckInt = ${enterprises.orbital.evekit.marketdata.instStuckInt}

# How frequently (milliseconds) we check for stuck region data downloads
enterprises.orbital.evekit.marketdata.regionStuckInt = ${enterprises.orbital.evekit.marketdata.regionStuckInt}

# Minimum delay (milliseconds) between region data refreshes
# CREST order data has a cache time of 5 minutes, therefore it's bad form to set this value lower than 5 minutes
enterprises.orbital.evekit.marketdata.minRegionSchedInterval = ${enterprises.orbital.evekit.marketdata.minRegionSchedInterval}

# Minimum delay (milliseconds) between history data refreshes
# CREST market history data has a cache time of about 7 hours, therefore it's bad form to set this value lower than 7 hours
enterprises.orbital.evekit.marketdata.minHistorySchedInterval = ${enterprises.orbital.evekit.marketdata.minHistorySchedInterval}

# Number of threads to use for CREST requests
# At time of writing, CCP limits requests to 20 open connections per IP
enterprises.orbital.evekit.marketdata.maxURLPool = ${enterprises.orbital.evekit.marketdata.maxURLPool}

##########################################################################################################
# Generator Configuration
##########################################################################################################

# Number of books to generate on each book dumper thread.  Building the book for a day requires reading all region
# files for each region.  It is therefore more efficient to build several books in parallel in memory to limit the
# number of times the region files must be scanned.  A larger value here will shorten the time to takes to output
# book files for a day.  You should set this value as large as possible for the amount of memory you have available
# for the generator job.
enterprises.orbital.evekit.marketdata.booksInParallel = ${enterprises.orbital.evekit.marketdata.booksInParallel}

